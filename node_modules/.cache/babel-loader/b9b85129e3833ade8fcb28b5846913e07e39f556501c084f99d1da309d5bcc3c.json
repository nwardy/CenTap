{"ast":null,"code":"var _jsxFileName = \"/Users/natewardy/Desktop/CenTap/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { AttendanceProvider } from './contexts/AttendanceContext';\nimport { ThemeContext } from './contexts/AttendanceContext';\nimport Dashboard from './pages/Dashboard';\nimport { lightColors, darkColors } from './assets/styles/colors';\nimport './assets/styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const theme = isDarkMode ? darkColors : lightColors;\n\n  // Toggle theme\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    localStorage.setItem('darkMode', !isDarkMode);\n  };\n\n  // Initialize theme preference from localStorage\n  useEffect(() => {\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    setIsDarkMode(savedDarkMode);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      isDarkMode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(AttendanceProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        style: {\n          backgroundColor: theme.appBg,\n          color: theme.textPrimary,\n          minHeight: '100vh',\n          transition: 'background-color 0.3s ease, color 0.3s ease'\n        },\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AttendanceProvider","ThemeContext","Dashboard","lightColors","darkColors","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","theme","toggleTheme","localStorage","setItem","savedDarkMode","getItem","Provider","value","children","className","style","backgroundColor","appBg","color","textPrimary","minHeight","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natewardy/Desktop/CenTap/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AttendanceProvider } from './contexts/AttendanceContext';\nimport { ThemeContext } from './contexts/AttendanceContext';\nimport Dashboard from './pages/Dashboard';\nimport { lightColors, darkColors } from './assets/styles/colors';\nimport './assets/styles/global.css';\n\nconst App = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const theme = isDarkMode ? darkColors : lightColors;\n  \n  // Toggle theme\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    localStorage.setItem('darkMode', !isDarkMode);\n  };\n  \n  // Initialize theme preference from localStorage\n  useEffect(() => {\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    setIsDarkMode(savedDarkMode);\n  }, []);\n\n  return (\n    <ThemeContext.Provider value={{ theme, isDarkMode, toggleTheme }}>\n      <AttendanceProvider>\n        <div \n          className=\"app\"\n          style={{\n            backgroundColor: theme.appBg,\n            color: theme.textPrimary,\n            minHeight: '100vh',\n            transition: 'background-color 0.3s ease, color 0.3s ease'\n          }}\n        >\n          <Dashboard />\n        </div>\n      </AttendanceProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,WAAW,EAAEC,UAAU,QAAQ,wBAAwB;AAChE,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMa,KAAK,GAAGF,UAAU,GAAGL,UAAU,GAAGD,WAAW;;EAEnD;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBF,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,CAACL,UAAU,CAAC;EAC/C,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAGF,YAAY,CAACG,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IACjEN,aAAa,CAACK,aAAa,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACL,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEP,KAAK;MAAEF,UAAU;MAAEG;IAAY,CAAE;IAAAO,QAAA,eAC/Db,OAAA,CAACN,kBAAkB;MAAAmB,QAAA,eACjBb,OAAA;QACEc,SAAS,EAAC,KAAK;QACfC,KAAK,EAAE;UACLC,eAAe,EAAEX,KAAK,CAACY,KAAK;UAC5BC,KAAK,EAAEb,KAAK,CAACc,WAAW;UACxBC,SAAS,EAAE,OAAO;UAClBC,UAAU,EAAE;QACd,CAAE;QAAAR,QAAA,eAEFb,OAAA,CAACJ,SAAS;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAE5B,CAAC;AAACvB,EAAA,CAjCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}