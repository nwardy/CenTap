{"ast":null,"code":"var _jsxFileName = \"/Users/natewardy/Desktop/CenTap/src/components/NFCScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AttendanceContext } from '../contexts/AttendanceContext';\nimport { scanNFCTag } from '../services/nfcService';\nimport { colors } from '../assets/styles/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFCScanner = () => {\n  _s();\n  const {\n    checkInAttendee,\n    attendees\n  } = useContext(AttendanceContext);\n  const [scanning, setScanning] = useState(false);\n  const [lastScanned, setLastScanned] = useState(null);\n  const [error, setError] = useState(null);\n  const [scanningActive, setScanningActive] = useState(false);\n\n  // Start NFC scanning\n  const startScanning = async () => {\n    try {\n      setScanning(true);\n      setError(null);\n      setScanningActive(true);\n\n      // In a real implementation, this would be a continuous process\n      // For demo purposes, we're using a single scan\n      const nfcTagId = await scanNFCTag();\n\n      // Find the attendee with this tag\n      const attendee = attendees.find(a => a.nfcTagId === nfcTagId);\n      if (attendee) {\n        checkInAttendee(nfcTagId);\n        setLastScanned(attendee);\n      } else {\n        setError(`Unknown NFC tag: ${nfcTagId}`);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setScanning(false);\n    }\n  };\n\n  // For demo purposes, simulate continuous scanning\n  useEffect(() => {\n    let interval;\n    if (scanningActive) {\n      interval = setInterval(() => {\n        // Simulate scanning a random tag\n        const randomIndex = Math.floor(Math.random() * attendees.length);\n        const randomAttendee = attendees[randomIndex];\n        if (randomAttendee && !randomAttendee.present) {\n          checkInAttendee(randomAttendee.nfcTagId);\n          setLastScanned(randomAttendee);\n        }\n      }, 3000); // Scan every 3 seconds\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [scanningActive, attendees, checkInAttendee]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '16px',\n      backgroundColor: colors.primary,\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n      margin: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: colors.textPrimary,\n        marginTop: 0\n      },\n      children: \"NFC Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '16px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '120px',\n          height: '120px',\n          borderRadius: '50%',\n          backgroundColor: scanning ? colors.secondary : colors.hover,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: '16px',\n          transition: 'all 0.3s ease',\n          animation: scanning ? 'pulse 1.5s infinite' : 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: scanning ? 'white' : colors.textPrimary\n          },\n          children: scanning ? 'Scanning...' : 'Ready'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (scanningActive) {\n            setScanningActive(false);\n          } else {\n            startScanning();\n          }\n        },\n        style: {\n          backgroundColor: scanningActive ? colors.error : colors.secondary,\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          padding: '12px 24px',\n          fontWeight: 'bold',\n          cursor: 'pointer'\n        },\n        children: scanningActive ? 'Stop Scanning' : 'Start Scanning'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), lastScanned && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px',\n        backgroundColor: colors.hover,\n        borderRadius: '4px',\n        marginTop: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Last checked in:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), \" \", lastScanned.name, /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: colors.success,\n          marginLeft: '8px',\n          fontWeight: 'bold'\n        },\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px',\n        backgroundColor: '#FFEBEE',\n        color: colors.error,\n        borderRadius: '4px',\n        marginTop: '16px'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(NFCScanner, \"Nc78kxkguasCvnaIFep70UPpOXM=\");\n_c = NFCScanner;\nexport default NFCScanner;\nvar _c;\n$RefreshReg$(_c, \"NFCScanner\");","map":{"version":3,"names":["React","useState","useContext","useEffect","AttendanceContext","scanNFCTag","colors","jsxDEV","_jsxDEV","NFCScanner","_s","checkInAttendee","attendees","scanning","setScanning","lastScanned","setLastScanned","error","setError","scanningActive","setScanningActive","startScanning","nfcTagId","attendee","find","a","err","message","interval","setInterval","randomIndex","Math","floor","random","length","randomAttendee","present","clearInterval","style","padding","backgroundColor","primary","borderRadius","boxShadow","margin","children","color","textPrimary","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","width","height","secondary","hover","justifyContent","marginBottom","transition","animation","onClick","border","fontWeight","cursor","name","success","marginLeft","_c","$RefreshReg$"],"sources":["/Users/natewardy/Desktop/CenTap/src/components/NFCScanner.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AttendanceContext } from '../contexts/AttendanceContext';\nimport { scanNFCTag } from '../services/nfcService';\nimport { colors } from '../assets/styles/colors';\n\nconst NFCScanner = () => {\n  const { checkInAttendee, attendees } = useContext(AttendanceContext);\n  const [scanning, setScanning] = useState(false);\n  const [lastScanned, setLastScanned] = useState(null);\n  const [error, setError] = useState(null);\n  const [scanningActive, setScanningActive] = useState(false);\n\n  // Start NFC scanning\n  const startScanning = async () => {\n    try {\n      setScanning(true);\n      setError(null);\n      setScanningActive(true);\n      \n      // In a real implementation, this would be a continuous process\n      // For demo purposes, we're using a single scan\n      const nfcTagId = await scanNFCTag();\n      \n      // Find the attendee with this tag\n      const attendee = attendees.find(a => a.nfcTagId === nfcTagId);\n      \n      if (attendee) {\n        checkInAttendee(nfcTagId);\n        setLastScanned(attendee);\n      } else {\n        setError(`Unknown NFC tag: ${nfcTagId}`);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setScanning(false);\n    }\n  };\n\n  // For demo purposes, simulate continuous scanning\n  useEffect(() => {\n    let interval;\n    \n    if (scanningActive) {\n      interval = setInterval(() => {\n        // Simulate scanning a random tag\n        const randomIndex = Math.floor(Math.random() * attendees.length);\n        const randomAttendee = attendees[randomIndex];\n        \n        if (randomAttendee && !randomAttendee.present) {\n          checkInAttendee(randomAttendee.nfcTagId);\n          setLastScanned(randomAttendee);\n        }\n      }, 3000); // Scan every 3 seconds\n    }\n    \n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [scanningActive, attendees, checkInAttendee]);\n\n  return (\n    <div style={{\n      padding: '16px',\n      backgroundColor: colors.primary,\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n      margin: '16px'\n    }}>\n      <h2 style={{ color: colors.textPrimary, marginTop: 0 }}>NFC Scanner</h2>\n      \n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '16px 0'\n      }}>\n        <div style={{\n          width: '120px',\n          height: '120px',\n          borderRadius: '50%',\n          backgroundColor: scanning ? colors.secondary : colors.hover,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: '16px',\n          transition: 'all 0.3s ease',\n          animation: scanning ? 'pulse 1.5s infinite' : 'none'\n        }}>\n          <span style={{ color: scanning ? 'white' : colors.textPrimary }}>\n            {scanning ? 'Scanning...' : 'Ready'}\n          </span>\n        </div>\n        \n        <button \n          onClick={() => {\n            if (scanningActive) {\n              setScanningActive(false);\n            } else {\n              startScanning();\n            }\n          }}\n          style={{\n            backgroundColor: scanningActive ? colors.error : colors.secondary,\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            padding: '12px 24px',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n          }}\n        >\n          {scanningActive ? 'Stop Scanning' : 'Start Scanning'}\n        </button>\n      </div>\n      \n      {lastScanned && (\n        <div style={{\n          padding: '12px',\n          backgroundColor: colors.hover,\n          borderRadius: '4px',\n          marginTop: '16px'\n        }}>\n          <strong>Last checked in:</strong> {lastScanned.name} \n          <span style={{ \n            color: colors.success, \n            marginLeft: '8px',\n            fontWeight: 'bold'\n          }}>✓</span>\n        </div>\n      )}\n      \n      {error && (\n        <div style={{\n          padding: '12px',\n          backgroundColor: '#FFEBEE',\n          color: colors.error,\n          borderRadius: '4px',\n          marginTop: '16px'\n        }}>\n          Error: {error}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NFCScanner;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,MAAM,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGV,UAAU,CAACE,iBAAiB,CAAC;EACpE,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAMoB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFP,WAAW,CAAC,IAAI,CAAC;MACjBI,QAAQ,CAAC,IAAI,CAAC;MACdE,iBAAiB,CAAC,IAAI,CAAC;;MAEvB;MACA;MACA,MAAME,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC;;MAEnC;MACA,MAAMkB,QAAQ,GAAGX,SAAS,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,QAAQ,KAAKA,QAAQ,CAAC;MAE7D,IAAIC,QAAQ,EAAE;QACZZ,eAAe,CAACW,QAAQ,CAAC;QACzBN,cAAc,CAACO,QAAQ,CAAC;MAC1B,CAAC,MAAM;QACLL,QAAQ,CAAC,oBAAoBI,QAAQ,EAAE,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRb,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACd,IAAIyB,QAAQ;IAEZ,IAAIT,cAAc,EAAE;MAClBS,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3B;QACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGrB,SAAS,CAACsB,MAAM,CAAC;QAChE,MAAMC,cAAc,GAAGvB,SAAS,CAACkB,WAAW,CAAC;QAE7C,IAAIK,cAAc,IAAI,CAACA,cAAc,CAACC,OAAO,EAAE;UAC7CzB,eAAe,CAACwB,cAAc,CAACb,QAAQ,CAAC;UACxCN,cAAc,CAACmB,cAAc,CAAC;QAChC;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IAEA,OAAO,MAAM;MACX,IAAIP,QAAQ,EAAES,aAAa,CAACT,QAAQ,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACT,cAAc,EAAEP,SAAS,EAAED,eAAe,CAAC,CAAC;EAEhD,oBACEH,OAAA;IAAK8B,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,eAAe,EAAElC,MAAM,CAACmC,OAAO;MAC/BC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE,8BAA8B;MACzCC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBACArC,OAAA;MAAI8B,KAAK,EAAE;QAAEQ,KAAK,EAAExC,MAAM,CAACyC,WAAW;QAAEC,SAAS,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExE5C,OAAA;MAAK8B,KAAK,EAAE;QACVe,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBX,MAAM,EAAE;MACV,CAAE;MAAAC,QAAA,gBACArC,OAAA;QAAK8B,KAAK,EAAE;UACVkB,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,OAAO;UACff,YAAY,EAAE,KAAK;UACnBF,eAAe,EAAE3B,QAAQ,GAAGP,MAAM,CAACoD,SAAS,GAAGpD,MAAM,CAACqD,KAAK;UAC3DN,OAAO,EAAE,MAAM;UACfO,cAAc,EAAE,QAAQ;UACxBL,UAAU,EAAE,QAAQ;UACpBM,YAAY,EAAE,MAAM;UACpBC,UAAU,EAAE,eAAe;UAC3BC,SAAS,EAAElD,QAAQ,GAAG,qBAAqB,GAAG;QAChD,CAAE;QAAAgC,QAAA,eACArC,OAAA;UAAM8B,KAAK,EAAE;YAAEQ,KAAK,EAAEjC,QAAQ,GAAG,OAAO,GAAGP,MAAM,CAACyC;UAAY,CAAE;UAAAF,QAAA,EAC7DhC,QAAQ,GAAG,aAAa,GAAG;QAAO;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEN5C,OAAA;QACEwD,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI7C,cAAc,EAAE;YAClBC,iBAAiB,CAAC,KAAK,CAAC;UAC1B,CAAC,MAAM;YACLC,aAAa,CAAC,CAAC;UACjB;QACF,CAAE;QACFiB,KAAK,EAAE;UACLE,eAAe,EAAErB,cAAc,GAAGb,MAAM,CAACW,KAAK,GAAGX,MAAM,CAACoD,SAAS;UACjEZ,KAAK,EAAE,OAAO;UACdmB,MAAM,EAAE,MAAM;UACdvB,YAAY,EAAE,KAAK;UACnBH,OAAO,EAAE,WAAW;UACpB2B,UAAU,EAAE,MAAM;UAClBC,MAAM,EAAE;QACV,CAAE;QAAAtB,QAAA,EAED1B,cAAc,GAAG,eAAe,GAAG;MAAgB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELrC,WAAW,iBACVP,OAAA;MAAK8B,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAElC,MAAM,CAACqD,KAAK;QAC7BjB,YAAY,EAAE,KAAK;QACnBM,SAAS,EAAE;MACb,CAAE;MAAAH,QAAA,gBACArC,OAAA;QAAAqC,QAAA,EAAQ;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrC,WAAW,CAACqD,IAAI,eACnD5D,OAAA;QAAM8B,KAAK,EAAE;UACXQ,KAAK,EAAExC,MAAM,CAAC+D,OAAO;UACrBC,UAAU,EAAE,KAAK;UACjBJ,UAAU,EAAE;QACd,CAAE;QAAArB,QAAA,EAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACN,EAEAnC,KAAK,iBACJT,OAAA;MAAK8B,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,SAAS;QAC1BM,KAAK,EAAExC,MAAM,CAACW,KAAK;QACnByB,YAAY,EAAE,KAAK;QACnBM,SAAS,EAAE;MACb,CAAE;MAAAH,QAAA,GAAC,SACM,EAAC5B,KAAK;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA5IID,UAAU;AAAA8D,EAAA,GAAV9D,UAAU;AA8IhB,eAAeA,UAAU;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}