{"ast":null,"code":"var _jsxFileName = \"/Users/natewardy/Desktop/CenTap/src/contexts/AttendanceContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { lightColors, darkColors } from '../assets/styles/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AttendanceContext = /*#__PURE__*/createContext();\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const AttendanceProvider = ({\n  children\n}) => {\n  _s();\n  const [attendees, setAttendees] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize with 200 attendees\n  useEffect(() => {\n    // First names and last names to generate realistic attendee names\n    const firstNames = [\"James\", \"Mary\", \"John\", \"Patricia\", \"Robert\", \"Jennifer\", \"Michael\", \"Linda\", \"William\", \"Elizabeth\", \"David\", \"Barbara\", \"Richard\", \"Susan\", \"Joseph\", \"Jessica\", \"Thomas\", \"Sarah\", \"Charles\", \"Karen\", \"Christopher\", \"Nancy\", \"Daniel\", \"Lisa\", \"Matthew\", \"Margaret\", \"Anthony\", \"Betty\", \"Mark\", \"Sandra\", \"Donald\", \"Ashley\", \"Steven\", \"Kimberly\", \"Paul\", \"Emily\", \"Andrew\", \"Donna\", \"Joshua\", \"Michelle\", \"Kenneth\", \"Dorothy\", \"Kevin\", \"Carol\", \"Brian\", \"Amanda\", \"George\", \"Melissa\", \"Edward\", \"Deborah\", \"Ronald\", \"Stephanie\", \"Timothy\", \"Rebecca\", \"Jason\", \"Sharon\", \"Jeffrey\", \"Laura\", \"Ryan\", \"Cynthia\", \"Jacob\", \"Kathleen\", \"Gary\", \"Amy\", \"Nicholas\", \"Angela\", \"Eric\", \"Shirley\", \"Jonathan\", \"Anna\", \"Stephen\", \"Brenda\", \"Larry\", \"Pamela\", \"Justin\", \"Nicole\", \"Scott\", \"Ruth\", \"Brandon\", \"Katherine\"];\n    const lastNames = [\"Smith\", \"Johnson\", \"Williams\", \"Jones\", \"Brown\", \"Davis\", \"Miller\", \"Wilson\", \"Moore\", \"Taylor\", \"Anderson\", \"Thomas\", \"Jackson\", \"White\", \"Harris\", \"Martin\", \"Thompson\", \"Garcia\", \"Martinez\", \"Robinson\", \"Clark\", \"Rodriguez\", \"Lewis\", \"Lee\", \"Walker\", \"Hall\", \"Allen\", \"Young\", \"Hernandez\", \"King\", \"Wright\", \"Lopez\", \"Hill\", \"Scott\", \"Green\", \"Adams\", \"Baker\", \"Gonzalez\", \"Nelson\", \"Carter\", \"Mitchell\", \"Perez\", \"Roberts\", \"Turner\", \"Phillips\", \"Campbell\", \"Parker\", \"Evans\", \"Edwards\", \"Collins\", \"Stewart\", \"Sanchez\", \"Morris\", \"Rogers\", \"Reed\", \"Cook\", \"Morgan\", \"Bell\", \"Murphy\", \"Bailey\", \"Rivera\", \"Cooper\", \"Richardson\", \"Cox\", \"Howard\", \"Ward\", \"Torres\", \"Peterson\", \"Gray\", \"Ramirez\", \"James\", \"Watson\", \"Brooks\", \"Kelly\", \"Sanders\", \"Price\", \"Bennett\", \"Wood\", \"Barnes\", \"Ross\"];\n\n    // Generate a random CN ID number\n    const generateCNID = () => {\n      const randomNum = Math.floor(100000 + Math.random() * 900000); // 6-digit number\n      return `CN${randomNum}`;\n    };\n\n    // Generate a random full name\n    const generateName = () => {\n      const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n      const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n      return `${firstName} ${lastName}`;\n    };\n\n    // In a real app, this would come from an API or database\n    const initialAttendees = Array(200).fill().map((_, index) => ({\n      id: index + 1,\n      nfcTagId: generateCNID(),\n      name: generateName(),\n      present: false,\n      checkInTime: null,\n      photoUrl: `https://randomuser.me/api/portraits/${index % 2 ? 'women' : 'men'}/${index % 70 + 1}.jpg`\n    }));\n    setAttendees(initialAttendees);\n    setLoading(false);\n  }, []);\n\n  // Check in an attendee using NFC tag ID\n  const checkInAttendee = nfcTagId => {\n    setAttendees(prev => prev.map(attendee => attendee.nfcTagId === nfcTagId ? {\n      ...attendee,\n      present: true,\n      checkInTime: new Date()\n    } : attendee));\n  };\n\n  // Get statistics\n  const getStats = () => {\n    const totalAttendees = attendees.length;\n    const presentAttendees = attendees.filter(a => a.present).length;\n    const absentAttendees = totalAttendees - presentAttendees;\n    const attendanceRate = totalAttendees ? presentAttendees / totalAttendees * 100 : 0;\n    return {\n      total: totalAttendees,\n      present: presentAttendees,\n      absent: absentAttendees,\n      rate: attendanceRate.toFixed(1)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(AttendanceContext.Provider, {\n    value: {\n      attendees,\n      loading,\n      checkInAttendee,\n      getStats\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceProvider, \"wXyt9Jf35t0y7Q66LyCUwAEXwBM=\");\n_c = AttendanceProvider;\nvar _c;\n$RefreshReg$(_c, \"AttendanceProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","lightColors","darkColors","jsxDEV","_jsxDEV","AttendanceContext","ThemeContext","AttendanceProvider","children","_s","attendees","setAttendees","loading","setLoading","firstNames","lastNames","generateCNID","randomNum","Math","floor","random","generateName","firstName","length","lastName","initialAttendees","Array","fill","map","_","index","id","nfcTagId","name","present","checkInTime","photoUrl","checkInAttendee","prev","attendee","Date","getStats","totalAttendees","presentAttendees","filter","a","absentAttendees","attendanceRate","total","absent","rate","toFixed","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natewardy/Desktop/CenTap/src/contexts/AttendanceContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { lightColors, darkColors } from '../assets/styles/colors';\n\nexport const AttendanceContext = createContext();\nexport const ThemeContext = createContext();\n\nexport const AttendanceProvider = ({ children }) => {\n  const [attendees, setAttendees] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize with 200 attendees\n  useEffect(() => {\n    // First names and last names to generate realistic attendee names\n    const firstNames = [\n      \"James\", \"Mary\", \"John\", \"Patricia\", \"Robert\", \"Jennifer\", \"Michael\", \"Linda\", \n      \"William\", \"Elizabeth\", \"David\", \"Barbara\", \"Richard\", \"Susan\", \"Joseph\", \"Jessica\",\n      \"Thomas\", \"Sarah\", \"Charles\", \"Karen\", \"Christopher\", \"Nancy\", \"Daniel\", \"Lisa\",\n      \"Matthew\", \"Margaret\", \"Anthony\", \"Betty\", \"Mark\", \"Sandra\", \"Donald\", \"Ashley\",\n      \"Steven\", \"Kimberly\", \"Paul\", \"Emily\", \"Andrew\", \"Donna\", \"Joshua\", \"Michelle\",\n      \"Kenneth\", \"Dorothy\", \"Kevin\", \"Carol\", \"Brian\", \"Amanda\", \"George\", \"Melissa\",\n      \"Edward\", \"Deborah\", \"Ronald\", \"Stephanie\", \"Timothy\", \"Rebecca\", \"Jason\", \"Sharon\",\n      \"Jeffrey\", \"Laura\", \"Ryan\", \"Cynthia\", \"Jacob\", \"Kathleen\", \"Gary\", \"Amy\",\n      \"Nicholas\", \"Angela\", \"Eric\", \"Shirley\", \"Jonathan\", \"Anna\", \"Stephen\", \"Brenda\",\n      \"Larry\", \"Pamela\", \"Justin\", \"Nicole\", \"Scott\", \"Ruth\", \"Brandon\", \"Katherine\"\n    ];\n    \n    const lastNames = [\n      \"Smith\", \"Johnson\", \"Williams\", \"Jones\", \"Brown\", \"Davis\", \"Miller\", \"Wilson\",\n      \"Moore\", \"Taylor\", \"Anderson\", \"Thomas\", \"Jackson\", \"White\", \"Harris\", \"Martin\",\n      \"Thompson\", \"Garcia\", \"Martinez\", \"Robinson\", \"Clark\", \"Rodriguez\", \"Lewis\", \"Lee\",\n      \"Walker\", \"Hall\", \"Allen\", \"Young\", \"Hernandez\", \"King\", \"Wright\", \"Lopez\",\n      \"Hill\", \"Scott\", \"Green\", \"Adams\", \"Baker\", \"Gonzalez\", \"Nelson\", \"Carter\",\n      \"Mitchell\", \"Perez\", \"Roberts\", \"Turner\", \"Phillips\", \"Campbell\", \"Parker\", \"Evans\",\n      \"Edwards\", \"Collins\", \"Stewart\", \"Sanchez\", \"Morris\", \"Rogers\", \"Reed\", \"Cook\",\n      \"Morgan\", \"Bell\", \"Murphy\", \"Bailey\", \"Rivera\", \"Cooper\", \"Richardson\", \"Cox\",\n      \"Howard\", \"Ward\", \"Torres\", \"Peterson\", \"Gray\", \"Ramirez\", \"James\", \"Watson\",\n      \"Brooks\", \"Kelly\", \"Sanders\", \"Price\", \"Bennett\", \"Wood\", \"Barnes\", \"Ross\"\n    ];\n    \n    // Generate a random CN ID number\n    const generateCNID = () => {\n      const randomNum = Math.floor(100000 + Math.random() * 900000); // 6-digit number\n      return `CN${randomNum}`;\n    };\n    \n    // Generate a random full name\n    const generateName = () => {\n      const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n      const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n      return `${firstName} ${lastName}`;\n    };\n    \n    // In a real app, this would come from an API or database\n    const initialAttendees = Array(200).fill().map((_, index) => ({\n      id: index + 1,\n      nfcTagId: generateCNID(),\n      name: generateName(),\n      present: false,\n      checkInTime: null,\n      photoUrl: `https://randomuser.me/api/portraits/${index % 2 ? 'women' : 'men'}/${(index % 70) + 1}.jpg`\n    }));\n    \n    setAttendees(initialAttendees);\n    setLoading(false);\n  }, []);\n\n  // Check in an attendee using NFC tag ID\n  const checkInAttendee = (nfcTagId) => {\n    setAttendees(prev => prev.map(attendee => \n      attendee.nfcTagId === nfcTagId \n        ? { ...attendee, present: true, checkInTime: new Date() } \n        : attendee\n    ));\n  };\n\n  // Get statistics\n  const getStats = () => {\n    const totalAttendees = attendees.length;\n    const presentAttendees = attendees.filter(a => a.present).length;\n    const absentAttendees = totalAttendees - presentAttendees;\n    const attendanceRate = totalAttendees ? (presentAttendees / totalAttendees) * 100 : 0;\n    \n    return {\n      total: totalAttendees,\n      present: presentAttendees,\n      absent: absentAttendees,\n      rate: attendanceRate.toFixed(1)\n    };\n  };\n\n  return (\n    <AttendanceContext.Provider value={{\n      attendees,\n      loading,\n      checkInAttendee,\n      getStats\n    }}>\n      {children}\n    </AttendanceContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,EAAEC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,iBAAiB,gBAAGP,aAAa,CAAC,CAAC;AAChD,OAAO,MAAMQ,YAAY,gBAAGR,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMS,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,UAAU,GAAG,CACjB,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAC7E,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EACnF,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAC/E,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAC/E,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAC9E,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAC9E,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EACnF,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EACzE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAChF,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,CAC/E;IAED,MAAMC,SAAS,GAAG,CAChB,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAC7E,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAC/E,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAClF,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAC1E,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAC1E,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EACnF,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAC9E,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAC7E,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAC5E,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAC3E;;IAED;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,MAAM,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;MAC/D,OAAO,KAAKH,SAAS,EAAE;IACzB,CAAC;;IAED;IACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,SAAS,GAAGR,UAAU,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,UAAU,CAACS,MAAM,CAAC,CAAC;MAC3E,MAAMC,QAAQ,GAAGT,SAAS,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,SAAS,CAACQ,MAAM,CAAC,CAAC;MACxE,OAAO,GAAGD,SAAS,IAAIE,QAAQ,EAAE;IACnC,CAAC;;IAED;IACA,MAAMC,gBAAgB,GAAGC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,MAAM;MAC5DC,EAAE,EAAED,KAAK,GAAG,CAAC;MACbE,QAAQ,EAAEhB,YAAY,CAAC,CAAC;MACxBiB,IAAI,EAAEZ,YAAY,CAAC,CAAC;MACpBa,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,uCAAuCN,KAAK,GAAG,CAAC,GAAG,OAAO,GAAG,KAAK,IAAKA,KAAK,GAAG,EAAE,GAAI,CAAC;IAClG,CAAC,CAAC,CAAC;IAEHnB,YAAY,CAACc,gBAAgB,CAAC;IAC9BZ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMwB,eAAe,GAAIL,QAAQ,IAAK;IACpCrB,YAAY,CAAC2B,IAAI,IAAIA,IAAI,CAACV,GAAG,CAACW,QAAQ,IACpCA,QAAQ,CAACP,QAAQ,KAAKA,QAAQ,GAC1B;MAAE,GAAGO,QAAQ;MAAEL,OAAO,EAAE,IAAI;MAAEC,WAAW,EAAE,IAAIK,IAAI,CAAC;IAAE,CAAC,GACvDD,QACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,cAAc,GAAGhC,SAAS,CAACa,MAAM;IACvC,MAAMoB,gBAAgB,GAAGjC,SAAS,CAACkC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACX,OAAO,CAAC,CAACX,MAAM;IAChE,MAAMuB,eAAe,GAAGJ,cAAc,GAAGC,gBAAgB;IACzD,MAAMI,cAAc,GAAGL,cAAc,GAAIC,gBAAgB,GAAGD,cAAc,GAAI,GAAG,GAAG,CAAC;IAErF,OAAO;MACLM,KAAK,EAAEN,cAAc;MACrBR,OAAO,EAAES,gBAAgB;MACzBM,MAAM,EAAEH,eAAe;MACvBI,IAAI,EAAEH,cAAc,CAACI,OAAO,CAAC,CAAC;IAChC,CAAC;EACH,CAAC;EAED,oBACE/C,OAAA,CAACC,iBAAiB,CAAC+C,QAAQ;IAACC,KAAK,EAAE;MACjC3C,SAAS;MACTE,OAAO;MACPyB,eAAe;MACfI;IACF,CAAE;IAAAjC,QAAA,EACCA;EAAQ;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAAChD,EAAA,CA9FWF,kBAAkB;AAAAmD,EAAA,GAAlBnD,kBAAkB;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}