{"ast":null,"code":"var _jsxFileName = \"/Users/natewardy/Desktop/CenTap/src/contexts/AttendanceContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AttendanceContext = /*#__PURE__*/createContext();\nexport const AttendanceProvider = ({\n  children\n}) => {\n  _s();\n  const [attendees, setAttendees] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize with 200 attendees\n  useEffect(() => {\n    // In a real app, this would come from an API or database\n    const initialAttendees = Array(200).fill().map((_, index) => ({\n      id: index + 1,\n      nfcTagId: `nfc-${index + 1}`,\n      name: `Attendee ${index + 1}`,\n      present: false,\n      checkInTime: null\n    }));\n    setAttendees(initialAttendees);\n    setLoading(false);\n  }, []);\n\n  // Check in an attendee using NFC tag ID\n  const checkInAttendee = nfcTagId => {\n    setAttendees(prev => prev.map(attendee => attendee.nfcTagId === nfcTagId ? {\n      ...attendee,\n      present: true,\n      checkInTime: new Date()\n    } : attendee));\n  };\n\n  // Get statistics\n  const getStats = () => {\n    const totalAttendees = attendees.length;\n    const presentAttendees = attendees.filter(a => a.present).length;\n    const absentAttendees = totalAttendees - presentAttendees;\n    const attendanceRate = totalAttendees ? presentAttendees / totalAttendees * 100 : 0;\n    return {\n      total: totalAttendees,\n      present: presentAttendees,\n      absent: absentAttendees,\n      rate: attendanceRate.toFixed(1)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(AttendanceContext.Provider, {\n    value: {\n      attendees,\n      loading,\n      checkInAttendee,\n      getStats\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceProvider, \"wXyt9Jf35t0y7Q66LyCUwAEXwBM=\");\n_c = AttendanceProvider;\nvar _c;\n$RefreshReg$(_c, \"AttendanceProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AttendanceContext","AttendanceProvider","children","_s","attendees","setAttendees","loading","setLoading","initialAttendees","Array","fill","map","_","index","id","nfcTagId","name","present","checkInTime","checkInAttendee","prev","attendee","Date","getStats","totalAttendees","length","presentAttendees","filter","a","absentAttendees","attendanceRate","total","absent","rate","toFixed","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natewardy/Desktop/CenTap/src/contexts/AttendanceContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AttendanceContext = createContext();\n\nexport const AttendanceProvider = ({ children }) => {\n  const [attendees, setAttendees] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize with 200 attendees\n  useEffect(() => {\n    // In a real app, this would come from an API or database\n    const initialAttendees = Array(200).fill().map((_, index) => ({\n      id: index + 1,\n      nfcTagId: `nfc-${index + 1}`,\n      name: `Attendee ${index + 1}`,\n      present: false,\n      checkInTime: null\n    }));\n    \n    setAttendees(initialAttendees);\n    setLoading(false);\n  }, []);\n\n  // Check in an attendee using NFC tag ID\n  const checkInAttendee = (nfcTagId) => {\n    setAttendees(prev => prev.map(attendee => \n      attendee.nfcTagId === nfcTagId \n        ? { ...attendee, present: true, checkInTime: new Date() } \n        : attendee\n    ));\n  };\n\n  // Get statistics\n  const getStats = () => {\n    const totalAttendees = attendees.length;\n    const presentAttendees = attendees.filter(a => a.present).length;\n    const absentAttendees = totalAttendees - presentAttendees;\n    const attendanceRate = totalAttendees ? (presentAttendees / totalAttendees) * 100 : 0;\n    \n    return {\n      total: totalAttendees,\n      present: presentAttendees,\n      absent: absentAttendees,\n      rate: attendanceRate.toFixed(1)\n    };\n  };\n\n  return (\n    <AttendanceContext.Provider value={{\n      attendees,\n      loading,\n      checkInAttendee,\n      getStats\n    }}>\n      {children}\n    </AttendanceContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,CAAC;AAEhD,OAAO,MAAMM,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,gBAAgB,GAAGC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,MAAM;MAC5DC,EAAE,EAAED,KAAK,GAAG,CAAC;MACbE,QAAQ,EAAE,OAAOF,KAAK,GAAG,CAAC,EAAE;MAC5BG,IAAI,EAAE,YAAYH,KAAK,GAAG,CAAC,EAAE;MAC7BI,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE;IACf,CAAC,CAAC,CAAC;IAEHb,YAAY,CAACG,gBAAgB,CAAC;IAC9BD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMY,eAAe,GAAIJ,QAAQ,IAAK;IACpCV,YAAY,CAACe,IAAI,IAAIA,IAAI,CAACT,GAAG,CAACU,QAAQ,IACpCA,QAAQ,CAACN,QAAQ,KAAKA,QAAQ,GAC1B;MAAE,GAAGM,QAAQ;MAAEJ,OAAO,EAAE,IAAI;MAAEC,WAAW,EAAE,IAAII,IAAI,CAAC;IAAE,CAAC,GACvDD,QACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,cAAc,GAAGpB,SAAS,CAACqB,MAAM;IACvC,MAAMC,gBAAgB,GAAGtB,SAAS,CAACuB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACX,OAAO,CAAC,CAACQ,MAAM;IAChE,MAAMI,eAAe,GAAGL,cAAc,GAAGE,gBAAgB;IACzD,MAAMI,cAAc,GAAGN,cAAc,GAAIE,gBAAgB,GAAGF,cAAc,GAAI,GAAG,GAAG,CAAC;IAErF,OAAO;MACLO,KAAK,EAAEP,cAAc;MACrBP,OAAO,EAAES,gBAAgB;MACzBM,MAAM,EAAEH,eAAe;MACvBI,IAAI,EAAEH,cAAc,CAACI,OAAO,CAAC,CAAC;IAChC,CAAC;EACH,CAAC;EAED,oBACEnC,OAAA,CAACC,iBAAiB,CAACmC,QAAQ;IAACC,KAAK,EAAE;MACjChC,SAAS;MACTE,OAAO;MACPa,eAAe;MACfI;IACF,CAAE;IAAArB,QAAA,EACCA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACrC,EAAA,CArDWF,kBAAkB;AAAAwC,EAAA,GAAlBxC,kBAAkB;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}